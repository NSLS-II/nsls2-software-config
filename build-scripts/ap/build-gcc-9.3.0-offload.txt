
!! Follow the directions, this is not to be run as a shell script

# gcc-9.3.0 with offloading.
mkdir -pv /nsls2/software/ap/gcc/build/gcc-9.3.0-offload
cd /nsls2/software/ap/gcc/build/gcc-9.3.0-offload
git clone https://github.com/MentorEmbedded/nvptx-tools
git clone https://github.com/MentorEmbedded/nvptx-newlib

# This MUST be done on GPU node or where cuda libs are installed
srun -p long -t 999 --exclusive --gres=gpu --pty bash
module load gcc/9.3.0
cd /nsls2/software/ap/gcc/build/gcc-9.3.0-offload
cuda=/usr/local/cuda
install_dir=/nsls2/software/ap/gcc/9.3.0-offload
cd /nsls2/software/ap/gcc/build/gcc-9.3.0-offload
cd nvptx-tools
./configure --with-cuda-driver-include=$cuda/include --with-cuda-driver-lib=$cuda/lib64 --prefix=$install_dir
make -j > m.o
make install
cd ../../gcc-9.3.0
ln -s ../gcc-9.3.0-offload/nvptx-newlib/newlib newlib
target=$(./config.guess)
cd ../gcc-9.3.0-offload
mkdir build-nvptx-gcc
cd build-nvptx-gcc
../../gcc-9.3.0/configure --target=nvptx-none --with-build-time-tools=$install_dir/nvptx-none/bin --enable-as-accelerator-for=$target --disable-sjlj-exceptions --enable-newlib-io-long-long --enable-languages="c,c++,fortran,lto" --prefix=$install_dir
make -j > m.o
make install
cd ..
mkdir build-host-gcc
cd build-host-gcc
../../gcc-9.3.0/configure --enable-offload-targets=nvptx-none --with-cuda-driver-include=$cuda/include --with-cuda-driver-lib=$cuda/lib64 --disable-bootstrap --disable-multilib --enable-languages="c,c++,fortran,lto" --prefix=$install_dir
make -j > m.o
make install
